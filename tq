[1mdiff --git a/src/components/Dashboard/RoomsList.jsx b/src/components/Dashboard/RoomsList.jsx[m
[1mindex 6336a92..9668faa 100644[m
[1m--- a/src/components/Dashboard/RoomsList.jsx[m
[1m+++ b/src/components/Dashboard/RoomsList.jsx[m
[36m@@ -25,7 +25,7 @@[m [mconst RoomButton = ({ uuid }) => {[m
   const handleClick = (e) => {[m
     e.preventDefault();[m
     // navigate(`/dashboard`);[m
[31m-    navigate(`/room/${uuid}`);[m
[32m+[m[32m    navigate(`/world/${uuid}`);[m
   };[m
 [m
   return ([m
[1mdiff --git a/src/routes/Room.jsx b/src/routes/Room.jsx[m
[1mindex c3cd42a..922e1ed 100644[m
[1m--- a/src/routes/Room.jsx[m
[1m+++ b/src/routes/Room.jsx[m
[36m@@ -48,7 +48,7 @@[m [mfunction Room({ username }) {[m
   console.log('socketRef.current :>> ', socketRef.current);[m
   console.log('threeCanvasRef :>> ', threeCanvasRef);[m
 [m
[31m-   const receiverSendSignal = (data) => {[m
[32m+[m[32m  const receiverSendSignal = (data) => {[m
     // find peer that we are receiving from since we are going to receive multiple peers.[m
     // we loop through the list of peers and match the id of the one trying to signal us[m
     const item = peersRef.current.find((p) => p.peerID === data.id);[m
[36m@@ -108,7 +108,7 @@[m [mfunction Room({ username }) {[m
       })[m
       .then(() => {[m
         // when handshake is complete - receiver gives back a signal[m
[31m-        socketRef.current.on('get users', getUsers); [m
[32m+[m[32m        socketRef.current.on('get users', getUsers);[m
         socketRef.current.on('user joined', newUserJoins);[m
         socketRef.current.on('receiving returned signal', receiverSendSignal);[m
 [m
[36m@@ -167,7 +167,6 @@[m [mfunction Room({ username }) {[m
       initiator: true,[m
       trickle: false,[m
       stream: userStream,[m
[31m-  [m
     });[m
 [m
     peer.on('signal', (signal) => {[m
[36m@@ -223,7 +222,7 @@[m [mfunction Room({ username }) {[m
         <Grid item xs={4}>[m
           {peers.map((peer, index) => ([m
             <OtherVideoFrame name="other person" peer={peer} />[m
[31m-            ))}[m
[32m+[m[32m          ))}[m
         </Grid>[m
       </Grid>[m
     </div>[m
